apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    name: locust-slave-{{ .Values.loadtest.id }}
    service: seldon
  name: locust-slave-{{ .Values.loadtest.id }}
  namespace: {{ .Release.Namespace }}      
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    name: locust-slave-{{ .Values.loadtest.id }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: locust-slave-{{ .Values.loadtest.id }}
        service: seldon
    spec:
      containers:
      - command:
        - locust
        - -f
        - /home/seldon/scripts/{{ .Values.locust.script }}
        - --host
        - '{{ .Values.locust.host }}'
        - --master-host
        - 'locust-master-{{ .Values.loadtest.id }}'
        - --slave
        env:
        - name: OAUTH_KEY
          value: '{{ .Values.oauth.key }}'
        - name: OAUTH_SECRET
          value: '{{ .Values.oauth.secret }}'
        - name: DATA_SIZE
          value: '{{ .Values.data.size }}'
        - name: SEND_FEEDBACK
          value: '{{ .Values.loadtest.sendFeedback }}'
        - name: MIN_WAIT
          value: '{{ .Values.locust.minWait }}'
        - name: MAX_WAIT
          value: '{{ .Values.locust.maxWait }}'
        - name: OAUTH_ENABLED
          value: '{{ .Values.oauth.enabled }}'
        - name: PAYLOAD_PATH
          value: '{{ .Values.locust.payloadPath }}'
        - name: REWARD_BRANCH
          value: '{{ .Values.locust.rewardBranch }}'
        image: {{ .Values.image.name }}:{{ .Values.image.release }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: payload-config-volume
            readOnly: true
            mountPath: "/home/seldon/resources"
        name: locust-slave-{{ .Values.loadtest.id }}
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
        - name: payload-config-volume
          configMap:
            name: resources-payload
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 5
